version: '3.6'
services:
  zoo1:
    image: zookeeper
    hostname: zoo1
    networks:
      kafkanet:
        aliases:
          - zookeeper1
    volumes:
      - zoo1-data:/var/lib/zookeeper/data
      - zoo1-logs:/var/lib/zookeeper/log
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888 server.2=zookeeper2:2888:3888 server.3=zookeeper3:2888:3888
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.hostname == manager1
  zoo2:
    image: zookeeper
    hostname: zoo2
    networks:
      kafkanet:
        aliases:
          - zookeeper2
    volumes:
      - zoo2-data:/var/lib/zookeeper/data
      - zoo2-logs:/var/lib/zookeeper/log
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zookeeper1:2888:3888 server.2=0.0.0.0:2888:3888 server.3=zookeeper3:2888:3888
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.hostname == manager2
  zoo3:
    image: zookeeper
    hostname: zoo3
    networks:
      kafkanet:
        aliases:
          - zookeeper3
    volumes:
      - zoo3-data:/var/lib/zookeeper/data
      - zoo3-logs:/var/lib/zookeeper/log
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zookeeper1:2888:3888 server.2=zookeeper2:2888:3888 server.3=0.0.0.0:2888:3888
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.hostname == manager3

  
# KAFKA_ADVERTISED_LISTENERS: INSIDE://broker1:9092,OUTSIDE://manager1:9094 is important
# INSIDE://broker1:9092 is how clients connect to the service via the attachable swarm overlay network (kafkanet)
# OUTSIDE://manager1:9094 is how host access the service when thy can't attach to the overlay (preferred)
  #listens on 9092
  kafka-broker1:
    image: confluentinc/cp-kafka:4.1.1-1
    networks:
      kafkanet:
        aliases:
          - broker1
    volumes:
      - broker1-data:/var/lib/kafka/data
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://broker1:9092,PLAINTEXT://broker1:9090
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.hostname == manager1

  #listens on 9092
  kafka-broker2:
    image: confluentinc/cp-kafka:4.1.1-1
    networks:
      kafkanet:
        aliases:
          - broker2
    volumes:
      - broker2-data:/var/lib/kafka/data
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://broker2:9092,PLAINTEXT://broker2:9090
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.hostname == manager2

  #listens on 9092
  kafka-broker3:
    image: confluentinc/cp-kafka:4.1.1-1
    hostname: broker3
    networks:
      kafkanet:
        aliases:
          - broker3
    volumes:
      - broker3-data:/var/lib/kafka/data
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:2181,zookeeper2:2181,zookeeper3:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://broker3:9092,PLAINTEXT://broker3:9090
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.hostname == manager3

volumes:
  zoo1-data:
  zoo1-logs:
  zoo2-data:
  zoo2-logs:  
  zoo3-data:
  zoo3-logs:

  broker1-data:
  broker2-data:
  broker3-data:

# overlay network that swarm hosts can use to contact kafka, if needed
networks:
  kafkanet:
    driver: overlay
    attachable: true
